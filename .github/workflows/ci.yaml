name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop

permissions:
  contents: read

jobs:
  golangci:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    name: Linter
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_version: v1.52.2

  build:
    name: build
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go: ['~1.18.0', '~1.19.0', '~1.20.0']
        fix-version:
          - fix42
          - fix44
    steps:
      - name: Setup
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Check out source
        uses: actions/checkout@v3
      - name: Install ruby
        uses: ruby/setup-ruby@v3
        with:
          ruby-version: '3.0'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: mod download
        run: go mod download

      - name: Run Mongo
        run: docker compose up -d mongo

      - name: Test
        env:
          GO111MODULE: "on"
          MONGODB_TEST_CXN: "mongodb://localhost:27017/"
          FIX_TEST: ${{ matrix.fix-version }}
        run: make generate; if [ -z "$FIX_TEST" ]; then make build; make; else make build_accept; make $FIX_TEST; fi

      - name: after test
        if: always()
        run: docker compose down
